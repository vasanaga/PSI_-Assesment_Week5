1st Question

     
CREATE TABLE new_table LIKE original_table;
INSERT INTO new_table SELECT * FROM original_table;

------------------------------------------------------
------------------------------------------------------
   
2nd Question

CREATE TABLE new_table SELECT * FROM original_table;

-----------------------------------------------------
-----------------------------------------------------
 
3rd Question

a) Assuming there are some 15 student records in the table

     SELECT * FROM (
     SELECT * FROM STUDENT ORDER BY id DESC LIMIT 10
     )Var1
     ORDER BY id ASC;
    
b)SELECT MAX(salary), MIN(salary) 
       FROM employees;

----------------------------------------------------------
----------------------------------------------------------

4th Question

user_transaction_template = '''
select 
    user_id
    , count(*) as num_transactions
    , sum(amount) as total_amount
from 
    transactions
where
    user_id = 1234
    and transaction_date = '2022-03-02'
group by
    user_id
'''
params = {
    'user_id': 1234,
    'transaction_date': '2022-03-02'
}
j = JinjaSql(param_style='pyformat')
query,bind_params = j.prepare_query(user_transaction_template,params)
print(query)

---------------------------------------------------------
---------------------------------------------------------

5th Question

Select * from students where name like `P%` and surname like `S%`

----------------------------------------------------------
----------------------------------------------------------

6th Question

SELECT LAST () FROM STUDENT ;

---------------------------------------------------------
---------------------------------------------------------

7th Question

CREATE TABLE Employees(
    EmployeeID int NOT NULL PRIMARY KEY,
    FirstName varchar(50) NOT NULL,
    LastName varchar(50) NOT NULL,
    ManagerID int NULL
)

INSERT INTO Employees VALUES(1,'Sowmya','Vasa',NULL)
INSERT INTO Employees VALUES(2,'abc','xyz',1)
INSERT INTO Employees VALUES(3,'def','qwe',2)
INSERT INTO Employees VALUES(4,'ghi','wer',2)
INSERT INTO Employees VALUES(5,'jkl','rty',2)
INSERT INTO Employees VALUES(6,'mno','yui',3)
INSERT INTO Employees VALUES(7,'pqr','guj',3)
INSERT INTO Employees VALUES(8,'stu','trr',4)
INSERT INTO Employees VALUES(9,'vwx','frl',4)
INSERT INTO Employees VALUES(10,'yza','ahg',5)

select *from Employees;

WITH
    cteReports(EmpID, FirstName, LastName, MgrID, EmpLevel)
    AS
    (
        SELECT EmployeeID, FirstName, LastName, ManagerID,1
        From Employees
        Where ManagerID is NULL
        UNION ALL
        SELECT e.EmployeeID, e.FirstName, e.LastName, e.ManagerID, r.EmpLevel + 1
        FROM Employees e 
            INNER JOIN cteReports r 
            ON e.ManagerID = r.EmpID
    )

    SELECT 
        FirstName + ' ' + LastName AS FullName,
        EmpLevel,
        (Select FirstName + ' ' + LastName AS FullName FROM Employees
            WHERE EmployeeID = cteReports.MgrID) AS ManagerID
            From cteReports
            Order BY EmpLevel,MgrID

---------------------------------------------------------
---------------------------------------------------------

8th Question

CREATE TRIGGER [dbo].[Customer_UPDATE]
       ON [dbo].[Customers]
AFTER UPDATE
AS
BEGIN
       SET NOCOUNT ON;
 
       DECLARE @CustomerId INT
       DECLARE @Action VARCHAR(50)
 
       SELECT @CustomerId = INSERTED.CustomerId       
       FROM INSERTED
 
       IF UPDATE(Name)
       BEGIN
              SET @Action = 'Updated Name'
       END
 
       IF UPDATE(Country)
       BEGIN
              SET @Action = 'Updated Country'
       END
 
       INSERT INTO CustomerLogs
       VALUES(@CustomerId, @Action)
END

Delete:
CREATE TRIGGER [dbo].[Customer_DELETE]
       ON [dbo].[Customers]
AFTER DELETE
AS
BEGIN
       SET NOCOUNT ON;
 
       DECLARE @CustomerId INT
 
       SELECT @CustomerId = DELETED.CustomerId       
       FROM DELETED
 
       INSERT INTO CustomerLogs
       VALUES(@CustomerId, 'Deleted')
END

  